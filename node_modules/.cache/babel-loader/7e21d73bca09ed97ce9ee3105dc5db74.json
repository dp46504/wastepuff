{"ast":null,"code":"var _jsxFileName = \"/home/rocky/Desktop/wastepuff/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Components/Button\";\nimport SigninForm from \"./Components/SigninForm\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nlet userData;\nconst serverUrl = \"http://localhost:5000/login\";\n\nconst isLogged = () => {\n  const cookie = document.cookie;\n\n  if (document.cookie.includes(\"email=\")) {\n    return true;\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Application, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 10\n    }\n  });\n}\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.loginFunction = () => {\n      // Pobranie danych potrzebnych do logowania\n      const emailFieldValue = document.getElementById(\"emailField\").value;\n      const passwordFieldValue = document.getElementById(\"passwordField\").value; // zmienna przechowujaca informacje czy haslo zawiera symbol %\n\n      const passwordValid = !passwordFieldValue.includes(\"%\"); // --------------------------------------------\n      // Sprawdzenie czy hasło nie zawiera symbolu %, który spowoduje błąd przy dekodowaniu URI po stronie serwera\n\n      if (passwordValid !== true || emailFieldValue === \"\" || passwordFieldValue === \"\") {\n        alert(\"Fields can't be empty. Check your password for containing % symbol. If it is, delete % symbol\"); // --------------------------------------------\n        // Jesli haslo nie zawiera symbolu % oraz oba pola nie są puste, tworze zapytanie \\/\n      } else {\n        // Stworzenie zapytania oraz kodowanie URI wraz z jego konkatenacją\n        const request = new XMLHttpRequest();\n        const params = `?email=${encodeURIComponent(emailFieldValue)}&password=${encodeURIComponent(passwordFieldValue)}`;\n        const endpoint = serverUrl + params; // --------------------------------------\n        // Gdy nadejdzie odpowiedz z serwera \\/\n\n        request.onreadystatechange = () => {\n          if (request.readyState === 4) {\n            if (request.status === 200) {\n              // TODO Przechwyć userdata po pozytywnym wyszukaniu użytkownika w bazie dancyh\n              this.state.userData = request.responseText;\n              this.state.isLogged = true;\n            } else {\n              alert(request.responseText);\n            }\n          }\n        }; // -------------------------------------\n        // Wysłanie zapytania \\/\n\n\n        request.open(\"GET\", endpoint);\n        request.send(); // -------------------------------------\n      }\n    };\n\n    this.state = {\n      isLogged: false,\n      userData: null\n    };\n    this.loginFunction = this.loginFunction.bind(this);\n  } // Funkcja Logująca i pobierająca dane z bazy danych\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, this.state.isLogged ?\n    /*#__PURE__*/\n    // GDY ZALOGOWANY\n    React.createElement(Dashboard, {\n      userData: this.state.userData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }) :\n    /*#__PURE__*/\n    // GDY NIEZALOGOWANY\n    React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"emailField\",\n      className: \"inputField\",\n      type: \"email\",\n      placeholder: \"Email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"passwordField\",\n      className: \"inputField\",\n      type: \"password\",\n      placeholder: \"Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      onClick: this.loginFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, \"Log in\")), /*#__PURE__*/React.createElement(Link, {\n      to: \"/signin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"signInAnchor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"Sign In\")))), /*#__PURE__*/React.createElement(Route, {\n      path: \"/signin\",\n      component: SigninForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rocky/Desktop/wastepuff/src/App.js"],"names":["React","Button","SigninForm","Dashboard","BrowserRouter","Router","Switch","Route","Link","userData","serverUrl","isLogged","cookie","document","includes","App","Application","Component","constructor","props","loginFunction","emailFieldValue","getElementById","value","passwordFieldValue","passwordValid","alert","request","XMLHttpRequest","params","encodeURIComponent","endpoint","onreadystatechange","readyState","status","state","responseText","open","send","bind","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Components/Button\";\nimport SigninForm from \"./Components/SigninForm\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nlet userData;\nconst serverUrl = \"http://localhost:5000/login\";\n\nconst isLogged = () => {\n  const cookie = document.cookie;\n  if (document.cookie.includes(\"email=\")) {\n    return true;\n  }\n};\n\nfunction App() {\n  return <Application></Application>;\n}\n\nclass Application extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogged: false,\n      userData: null,\n    };\n    this.loginFunction = this.loginFunction.bind(this);\n  }\n  // Funkcja Logująca i pobierająca dane z bazy danych\n  loginFunction = () => {\n    // Pobranie danych potrzebnych do logowania\n    const emailFieldValue = document.getElementById(\"emailField\").value;\n    const passwordFieldValue = document.getElementById(\"passwordField\").value;\n    // zmienna przechowujaca informacje czy haslo zawiera symbol %\n    const passwordValid = !passwordFieldValue.includes(\"%\");\n    // --------------------------------------------\n\n    // Sprawdzenie czy hasło nie zawiera symbolu %, który spowoduje błąd przy dekodowaniu URI po stronie serwera\n    if (\n      passwordValid !== true ||\n      emailFieldValue === \"\" ||\n      passwordFieldValue === \"\"\n    ) {\n      alert(\n        \"Fields can't be empty. Check your password for containing % symbol. If it is, delete % symbol\"\n      );\n      // --------------------------------------------\n\n      // Jesli haslo nie zawiera symbolu % oraz oba pola nie są puste, tworze zapytanie \\/\n    } else {\n      // Stworzenie zapytania oraz kodowanie URI wraz z jego konkatenacją\n      const request = new XMLHttpRequest();\n\n      const params = `?email=${encodeURIComponent(\n        emailFieldValue\n      )}&password=${encodeURIComponent(passwordFieldValue)}`;\n      const endpoint = serverUrl + params;\n      // --------------------------------------\n\n      // Gdy nadejdzie odpowiedz z serwera \\/\n      request.onreadystatechange = () => {\n        if (request.readyState === 4) {\n          if (request.status === 200) {\n            // TODO Przechwyć userdata po pozytywnym wyszukaniu użytkownika w bazie dancyh\n            this.state.userData = request.responseText;\n            this.state.isLogged = true;\n          } else {\n            alert(request.responseText);\n          }\n        }\n      };\n      // -------------------------------------\n\n      // Wysłanie zapytania \\/\n      request.open(\"GET\", endpoint);\n      request.send();\n      // -------------------------------------\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Router>\n          <Switch>\n            {/* GŁÓWNA STRONA */}\n            <Route path=\"/\" exact>\n              {this.state.isLogged ? (\n                // GDY ZALOGOWANY\n                <Dashboard userData={this.state.userData}></Dashboard>\n              ) : (\n                // GDY NIEZALOGOWANY\n                <div>\n                  <input\n                    id=\"emailField\"\n                    className=\"inputField\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                  ></input>\n                  <input\n                    id=\"passwordField\"\n                    className=\"inputField\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                  ></input>\n                  <div onClick={this.loginFunction}>\n                    <Button>Log in</Button>\n                  </div>\n\n                  <Link to=\"/signin\">\n                    <div id=\"signInAnchor\">Sign In</div>\n                  </Link>\n                </div>\n              )}\n            </Route>\n\n            {/* EKRAN Z WYBOREM LOGOWANIA LUB REJESTRACJI */}\n            {/* WYRENDEROWANIE FORMULARZA REJESTRACJI */}\n            <Route path=\"/signin\" component={SigninForm}></Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}