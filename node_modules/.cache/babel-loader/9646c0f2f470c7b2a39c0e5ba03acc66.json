{"ast":null,"code":"var _jsxFileName = \"/home/rocky/Desktop/wastepuff/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Components/Button\";\nimport SigninForm from \"./Components/SigninForm\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nlet userData; // Funkcja Logująca i pobierająca dane z bazy danych\n\nconst loginFunction = () => {\n  // Pobranie danych potrzebnych do logowania\n  const emailFieldValue = document.getElementById(\"emailField\").value;\n  const passwordFieldValue = document.getElementById(\"passwordField\").value; // zmienna przechowujaca informacje czy haslo zawiera symbol %\n\n  const passwordValid = !passwordFieldValue.includes(\"%\"); // --------------------------------------------\n  // Sprawdzenie czy hasło nie zawiera symbolu %, który spowoduje błąd przy dekodowaniu URI po stronie serwera\n\n  if (passwordValid !== true || emailFieldValue === \"\" || passwordFieldValue === \"\") {\n    alert(\"Fields can't be empty. Check your password for containing % symbol. If it is, delete % symbol\"); // --------------------------------------------\n    // Jesli haslo nie zawiera symbolu % oraz oba pola nie są puste, tworze zapytanie \\/\n  } else {\n    // Stworzenie zapytania oraz kodowanie URI wraz z jego konkatenacją\n    const request = new XMLHttpRequest();\n    const url = \"http://localhost:5000/login\";\n    const params = `?email=${encodeURIComponent(emailFieldValue)}&password=${encodeURIComponent(passwordFieldValue)}`;\n    const endpoint = url + params; // --------------------------------------\n    // Gdy nadejdzie odpowiedz z serwera \\/\n\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          // TODO Przechwyć userdata po pozytywnym wyszukaniu użytkownika w bazie dancyh\n          userData = request.responseText;\n          document.cookie = `email=${emailFieldValue}`;\n          window.location.href = \"\";\n        } else {\n          alert(request.responseText);\n        }\n      }\n    }; // -------------------------------------\n    // Wysłanie zapytania \\/\n\n\n    request.open(\"GET\", endpoint);\n    request.send(); // -------------------------------------\n  }\n};\n\nconst isLogged = () => {\n  const cookie = document.cookie;\n\n  if (document.cookie.includes(\"email=\")) {\n    return true;\n  }\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, isLogged() ?\n  /*#__PURE__*/\n  // GDY ZALOGOWANY\n  React.createElement(Dashboard, {\n    userData: userData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }) :\n  /*#__PURE__*/\n  // GDY NIEZALOGOWANY\n  React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    id: \"emailField\",\n    className: \"inputField\",\n    type: \"email\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    id: \"passwordField\",\n    className: \"inputField\",\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: loginFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 19\n    }\n  }, \"Log in\")), /*#__PURE__*/React.createElement(Link, {\n    to: \"/signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"signInAnchor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }\n  }, \"Sign In\")))), /*#__PURE__*/React.createElement(Route, {\n    path: \"/signin\",\n    component: SigninForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/rocky/Desktop/wastepuff/src/App.js"],"names":["React","Button","SigninForm","Dashboard","BrowserRouter","Router","Switch","Route","Link","userData","loginFunction","emailFieldValue","document","getElementById","value","passwordFieldValue","passwordValid","includes","alert","request","XMLHttpRequest","url","params","encodeURIComponent","endpoint","onreadystatechange","readyState","status","responseText","cookie","window","location","href","open","send","isLogged","App"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport Button from \"./Components/Button\";\nimport SigninForm from \"./Components/SigninForm\";\nimport Dashboard from \"./Components/Dashboard\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nlet userData;\n\n// Funkcja Logująca i pobierająca dane z bazy danych\nconst loginFunction = () => {\n  // Pobranie danych potrzebnych do logowania\n  const emailFieldValue = document.getElementById(\"emailField\").value;\n  const passwordFieldValue = document.getElementById(\"passwordField\").value;\n  // zmienna przechowujaca informacje czy haslo zawiera symbol %\n  const passwordValid = !passwordFieldValue.includes(\"%\");\n  // --------------------------------------------\n\n  // Sprawdzenie czy hasło nie zawiera symbolu %, który spowoduje błąd przy dekodowaniu URI po stronie serwera\n  if (\n    passwordValid !== true ||\n    emailFieldValue === \"\" ||\n    passwordFieldValue === \"\"\n  ) {\n    alert(\n      \"Fields can't be empty. Check your password for containing % symbol. If it is, delete % symbol\"\n    );\n    // --------------------------------------------\n\n    // Jesli haslo nie zawiera symbolu % oraz oba pola nie są puste, tworze zapytanie \\/\n  } else {\n    // Stworzenie zapytania oraz kodowanie URI wraz z jego konkatenacją\n    const request = new XMLHttpRequest();\n    const url = \"http://localhost:5000/login\";\n    const params = `?email=${encodeURIComponent(\n      emailFieldValue\n    )}&password=${encodeURIComponent(passwordFieldValue)}`;\n    const endpoint = url + params;\n    // --------------------------------------\n\n    // Gdy nadejdzie odpowiedz z serwera \\/\n    request.onreadystatechange = () => {\n      if (request.readyState === 4) {\n        if (request.status === 200) {\n          // TODO Przechwyć userdata po pozytywnym wyszukaniu użytkownika w bazie dancyh\n          userData=request.responseText\n          document.cookie = `email=${emailFieldValue}`;\n          window.location.href = \"\";\n        } else {\n          alert(request.responseText);\n        }\n      }\n    };\n    // -------------------------------------\n\n    // Wysłanie zapytania \\/\n    request.open(\"GET\", endpoint);\n    request.send();\n    // -------------------------------------\n  }\n};\n\nconst isLogged = () => {\n  const cookie = document.cookie;\n  if (document.cookie.includes(\"email=\")) {\n    return true;\n  }\n};\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          {/* GŁÓWNA STRONA */}\n          <Route path=\"/\" exact>\n            {isLogged() ? (\n              // GDY ZALOGOWANY\n              <Dashboard userData={userData}></Dashboard>\n            ) : (\n              // GDY NIEZALOGOWANY\n              <div>\n                <input\n                  id=\"emailField\"\n                  className=\"inputField\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                ></input>\n                <input\n                  id=\"passwordField\"\n                  className=\"inputField\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                ></input>\n                <div onClick={loginFunction}>\n                  <Button>Log in</Button>\n                </div>\n\n                <Link to=\"/signin\">\n                  <div id=\"signInAnchor\">Sign In</div>\n                </Link>\n              </div>\n            )}\n          </Route>\n\n          {/* EKRAN Z WYBOREM LOGOWANIA LUB REJESTRACJI */}\n          {/* WYRENDEROWANIE FORMULARZA REJESTRACJI */}\n          <Route path=\"/signin\" component={SigninForm}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}